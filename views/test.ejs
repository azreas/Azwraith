<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <!-- 这是服务端地址 -->
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>

    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>
    <a href="/logout">登出</a>
    <br/>
    <br/>
    <form action="/container/create" method="post">
        <p>
            镜像名称：<input name="image">
        </p>
        <p>
            镜像版本：<input name="imagetag">
        </p>
        <p>
            服务名称：<input name="containerName">
        </p>
        <p>
            实例：<input name="instance">
        </p>
        <p>
            配置级别：<input name="conflevel">
        </p>
        <p>
            <input type="submit">
        </p>
    </form>

    <hr/>

    <form action="/serve/create" method="post">
        <p>
            服务名称：<input name="name">
        </p>
        <p>
            镜像名称：<input name="image">
        </p>
        <p>
            镜像版本：<input name="imagetag">
        </p>
        <p>
            配置级别：<input name="conflevel">
        </p>
        <p>
            初始实例：<input name="instance">
        </p>
        <p>
            拓展方式：<input name="expandPattern">
        </p>
        <p>
            执行命令：<input name="command">
        </p>
        <p>
            <input type="submit">
        </p>
    </form>

<script>
    /*//连接websocket后端服务器
    var socket = io.connect('ws://'+window.location.host);

    // 监听服务端发来的日志
    socket.on('log', function(data){
        console.log(data.log);
    });

    // 监听服务端发来的监控数据
    socket.on('monitor', function(data){
        //data = JSON.parse(data);
        console.log("cpu ---> "+data.cpu);
        console.log("memory ---> "+data.memory);
        console.log("netRx ---> "+data.netRx);
        console.log("netTx ---> "+data.netTx);
    });

    // 根据容器实例id获取日志
    socket.emit('getLogByInstanceId', "f46fe65e5caa");

    // 根据容器实例id获取监控
    socket.emit('getMonitorByInstanceId', "f46fe65e5caa");*/
</script>

</body>
</html>